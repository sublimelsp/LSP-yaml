{
	"command": ["${node_bin}", "${server_path}", "--stdio"],
	"schemes": ["file", "buffer", "res", "json-schema"],
	// @see https://github.com/redhat-developer/yaml-language-server#language-server-settings
	"settings": {
		// The URL of the proxy server that will be used when attempting to download a schema.
		// If it is not set or it is undefined no proxy server will be used.
		"http.proxy": null,
		// If true the proxy server certificate should be verified against the list of supplied CAs
		"http.proxyStrictSSL": false,
		// Enable/disable autocompletion feature
		"yaml.completion": true,
		// Array of custom tags that the parser will validate against. It has two ways to be used.
		// Either an item in the array is a custom tag such as "!Ref" and it will automatically map !Ref to scalar
		// or you can specify the type of the object !Ref should be e.g. "!Ref sequence".
		// The type of object can be either scalar (for strings and booleans), sequence (for arrays), map (for objects).
		"yaml.customTags": [],
		// The maximum number of outline symbols and folding regions computed (limited for performance reasons).
		"yaml.maxItemsComputed": 5000,
		// The number of spaces to use when autocompleting
		"yaml.editor.tabSize": 2,
		// Enable/disable default YAML formatter
		"yaml.format.enable": true,
		// Use single quotes instead of double quotes
		"yaml.format.singleQuote": false,
		// Print spaces between brackets in objects
		"yaml.format.bracketSpacing": true,
		// always: wrap prose if it exeeds the print width
		// never: never wrap the prose
		// preserve: wrap prose as-is
		"yaml.format.proseWrap": "preserve",
		// Specify the line length that the printer will wrap on
		"yaml.format.printWidth": 120,
		// Enable/disable hover
		"yaml.hover": true,
		// Associate schemas to YAML files in the current workspace
		"yaml.schemas": {},
		// Automatically pull available YAML schemas from JSON Schema Store
		"yaml.schemaStore.enable": true,
		// Overrides the schema catalog URL. Defaults to https://www.schemastore.org/api/json/catalog.json
		"yaml.schemaStore.url": "",
		// Enable/disable validation feature
		"yaml.validate": true,
		// Globally set additionalProperties to false if additionalProperties is not set and if schema.type is object.
		// So if its true, no extra properties are allowed inside yaml.
		"yaml.disableAdditionalProperties": false,
	},
	"selector": "source.yml | source.yaml",
}
